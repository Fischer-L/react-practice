schema {
  query: Query
  mutation: Mutation
}

type Query {
  listMenuItems: [MenuItem!]!
  listTables: [Table]!
  getOrder(orderId: String!): Order!
}

type Mutation {
  createOrder(tableId: String!, orderItems: [OrderItemInput]!): Order!
  updateOrder(orderId: String!, orderItems: [OrderItemInput]!, version: Int!): Order!
  checkOrder(orderId: String!): Boolean
}

type Table {
  id: String!,
  orderId: String,
  orderStatus: OrderStatus
}

enum OrderStatus {
  ORDERED,
  PAYED
}

type MenuItem {
  id: String!,
  name: String!,
  price: Float!,
}

type Order {
  id: String!,
  tableId: String!,
  orderItems: [OrderItem]!,
  version: Int,
  status: String!,
}

type OrderItem {
  menuId: String!,
  count: Int!,
}

input OrderItemInput {
  menuId: String!,
  count: Int!,
}
